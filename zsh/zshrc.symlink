#!/usr/bin/env zsh
# zsh interactive environment setup script.

###########################################################
# to profile zsh startup time, set PROF_MODE env variable,
# 0          - means no profile will be applied.
# 1 or zprof - means profile with zsh/zprof module
# 2 or trace - means dump execution trace with XTRACE opt.
# usage: PROF_MODE=1 zsh -i -c exit
case ${PROF_MODE:-0} in
0)
	__prof_func() { return ; } ;;
1|"zprof")
	zmodload zsh/zprof
	__prof_func() { zprof ; } ;;
2|"trace")
	zmodload zsh/datetime
	setopt PROMPT_SUBST
	PS4='+$EPOCHREALTIME %N:%i> '

	logfile=$(mktemp zsh_profile)
	echo "Logging to $logfile"
	exec 3>&2 2>$logfile
	setopt XTRACE
	__prof_func() { unsetopt XTRACE; exec 2>&3 3>&- ; } ;;
esac

# explict disable compaudit check in order to boot startup time.
export ZSH_DISABLE_COMPFIX="true"

###########################################################
# Pre configuration

# Path shortcut to this dotfiles path is $DOTFILES
export DOTFILES=~/.dotfiles

# Loads antidote dynamically
# source /usr/local/opt/antidote/share/antidote/antidote.zsh
# antidote load

# Speed up zsh compinit by only checking cache once a day.
# On slow systems, checking the cached .zcompdump file to see if it must be
# regenerated adds a noticable delay to zsh startup.  This little hack restricts
# it to once a day.  It should be pasted into your own completion file.
#
# The globbing is a little complicated here:
# - '#q' is an explicit glob qualifier that makes globbing work within zsh's [[ ]] construct.
# - 'N' makes the glob pattern evaluate to nothing when it doesn't match (rather than throw a globbing error)
# - '.' matches "regular files"
# - 'mh+24' matches files (or directories or whatever) that are older than 24 hours.
# https://gist.github.com/ctechols/ca1035271ad134841284
# Some relevant information from zsh manpages for 'compinit':
# -D ........... disables .zcompudump file
# -d ........... used to set an alternative name to .zcompdump
# -i ........... accept insecure files
# -C ........... ignore checking at all
# EXTENDED_GLOB option is required,
# see https://stackoverflow.com/a/41508466/5277711
# see http://zsh.sourceforge.net/Doc/Release/Expansion.html#Glob-Qualifiers
autoload -Uz compinit
# shellcheck disable=SC1123,SC1072,SC1073,SC1089,SC1083
() {
if [[ $# -gt 0 ]]; then
	zcompdump=${ZDOTDIR:-$HOME}/.zcompdump
	# update the timestamp on compdump fileA
	echo -e "\e[94m[\e[0m Regenerate 'compinit' Completions \e[94m]\e[0m"
	compinit
	compdump -d "$zcompdump"
	# Compile zcompdump, if modified, to increase startup speed.
	if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
		zcompile "$zcompdump"
	fi
else
	# omit the check for new functions since we updated today
	compinit -C
fi
} ${ZDOTDIR:-$HOME}/.zcompdump(N.mh+24)

# instead add 'robbyrussell/oh-my-zsh path:lib/theme-and-appearance.zsh'
# to zsh_plugin.txt, we manually load colors here. 
# otherwise 'colored-man-pages' plugin won't work for some unknown reason.
autoload -U colors && colors

# Loads functions will be used in 
for funcfile in $DOTFILES/functions/*.zsh; do
	source "$funcfile"
done

# Loads antidote bundles statically
# use command below to generate static plugin file, and uncomment line with source.
# antidote bundle < $DOTFILES/zsh/zsh_plugins.txt > $HOME/.zsh_plugins.zsh
source $HOME/.zsh_plugins.zsh

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]; then
	source ~/.localrc
fi

# remove duplicate PATH entry by zsh feature
# defines in functions.zsh
path_dedup

# profile zsh startup time
__prof_func
unset -f __prof_func

# make last command's exit code 0, related with spaceship-prompt's exit_code section
# but it seems that non-zero exit code comes from command above (not related with
# code at current version, that was fixed), replace '[ checks ] && function'
# with if statement will resolve this problem and no longer need this hack.
# echo >/dev/null

